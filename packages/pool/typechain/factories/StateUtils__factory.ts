/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { StateUtils } from "../StateUtils";

export class StateUtils__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(api3TokenAddress: string, overrides?: Overrides): Promise<StateUtils> {
    return super.deploy(
      api3TokenAddress,
      overrides || {}
    ) as Promise<StateUtils>;
  }
  getDeployTransaction(
    api3TokenAddress: string,
    overrides?: Overrides
  ): TransactionRequest {
    return super.getDeployTransaction(api3TokenAddress, overrides || {});
  }
  attach(address: string): StateUtils {
    return super.attach(address) as StateUtils;
  }
  connect(signer: Signer): StateUtils__factory {
    return super.connect(signer) as StateUtils__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): StateUtils {
    return new Contract(address, _abi, signerOrProvider) as StateUtils;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "api3TokenAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "epoch",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "rewardAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newApr",
        type: "uint256",
      },
    ],
    name: "Epoch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "toEpoch",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "locked",
        type: "uint256",
      },
    ],
    name: "UserUpdate",
    type: "event",
  },
  {
    inputs: [],
    name: "claimsManager",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "currentApr",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "genesisEpoch",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "userAddress",
        type: "address",
      },
    ],
    name: "getUserLocked",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "userAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "targetEpoch",
        type: "uint256",
      },
    ],
    name: "getUserLockedAt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "lastEpochPaid",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxApr",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minApr",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "targetEpoch",
        type: "uint256",
      },
    ],
    name: "payReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardEpochLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardVestingPeriod",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "rewards",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "atBlock",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "stakeTarget",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "totalShares",
    outputs: [
      {
        internalType: "uint256",
        name: "fromBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "totalStaked",
    outputs: [
      {
        internalType: "uint256",
        name: "fromBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "unstakeWaitPeriod",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "updateCoeff",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "userAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "targetEpoch",
        type: "uint256",
      },
    ],
    name: "updateUserLocked",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "users",
    outputs: [
      {
        internalType: "uint256",
        name: "unstaked",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "locked",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "vesting",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "unstakeScheduledFor",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "unstakeAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastUpdateEpoch",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "oldestLockedEpoch",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60a0604052622625a060065563047868c06007556a084595161401484a000000600855620f424060095562093a80600a55600654600b553480156200004357600080fd5b506040516200138b3803806200138b833981810160405260208110156200006957600080fd5b50516040805180820182524380825260016020808401828152600280548085018255600082815296517f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace9183029182015591517f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5acf909201919091558551808701909652928552848101828152600380549384018155855294517fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b929093029182019290925592517fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85c9093019290925580546001600160a01b0319166001600160a01b0384161790556200018c90429062093a80906200020c811b62000a9517901c565b608052620001aa4262093a806200020c602090811b62000a9517901c565b6005819055506040518060400160405280600081526020014381525060046000620001e762093a80426200020c60201b62000a951790919060201c565b8152602080820192909252604001600020825181559101516001909101555062000304565b60006200025683836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f0000000000008152506200025d60201b60201c565b9392505050565b60008183620002ed5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015620002b157818101518382015260200162000297565b50505050905090810190601f168015620002df5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b506000838581620002fa57fe5b0495945050505050565b60805161105d6200032e6000398061075952806109a25280610af55280610b24525061105d6000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c8063784b3c5d116100ad578063decac4f511610071578063decac4f514610298578063e14b5fac146102a0578063e7460a52146102c6578063f301af42146102ce578063f32ca51f146102eb57610121565b8063784b3c5d1461021a578063917656b91461022257806392093b361461022a578063a87430ba14610232578063b70e6be61461029057610121565b806320a0a0e9116100f457806320a0a0e9146101c857806341cb8c20146101d05780634eb05c47146101ed5780634f322ae8146101f55780637702059e146101fd57610121565b8063106644131461012657806313f2dad01461014057806318dbf733146101765780631eb08ba9146101a4575b600080fd5b61012e610317565b60408051918252519081900360200190f35b61015d6004803603602081101561015657600080fd5b503561031d565b6040805192835260208301919091528051918290030190f35b6101a26004803603604081101561018c57600080fd5b506001600160a01b038135169060200135610348565b005b6101ac6103da565b604080516001600160a01b039092168252519081900360200190f35b61012e6103e9565b61015d600480360360208110156101e657600080fd5b50356103f0565b61012e6103fd565b61012e610403565b6101a26004803603602081101561021357600080fd5b5035610409565b61012e610708565b61012e61070e565b61012e610714565b6102586004803603602081101561024857600080fd5b50356001600160a01b031661071a565b604080519788526020880196909652868601949094526060860192909252608085015260a084015260c0830152519081900360e00190f35b61012e610757565b61012e61077b565b61012e600480360360208110156102b657600080fd5b50356001600160a01b0316610780565b61012e61079e565b61015d600480360360208110156102e457600080fd5b50356107a4565b61012e6004803603604081101561030157600080fd5b506001600160a01b0381351690602001356107bd565b60095481565b6002818154811061032a57fe5b60009182526020909120600290910201805460019091015490915082565b600061035483836107bd565b6001600160a01b03841660009081526001602052604090206002810182905590915061037e610ade565b600a82015560098101839055600281015460408051858152602081019290925280516001600160a01b038716927f6aa46aa24dd78d66eaff80fdc122ff406f1b5afe46204d8008b60282c8ec79af92908290030190a250505050565b600c546001600160a01b031681565b62093a8081565b6003818154811061032a57fe5b60085481565b600b5481565b6104164262093a80610a95565b81111561042257600080fd5b8060055410156107055760055460009061043d906001610b59565b9050600061044b6003610bb3565b905060005b83831161067f576000546040805163bbb30c5d60e01b815230600482015290516001600160a01b039092169163bbb30c5d91602480820192602092909190829003018186803b1580156104a257600080fd5b505afa1580156104b6573d6000803e3d6000fd5b505050506040513d60208110156104cc57600080fd5b505161054257604080518082018252600080825243602080840191825287835260048152848320935184559051600190930192909255600b54835191825291810191909152815185927fce8f0c0868b3497f8bb005e8ee9d6f967e32053f5290e2c1c3390e106b92cde4928290030190a261066d565b61054b82610bbf565b60006105756305f5e10061056f603461056f600b5488610cd190919063ffffffff16565b90610a95565b60408051808201825282815243602080830191825260008981526004909152929092209051815590516001909101559050801561062c5760008054604080516340c10f1960e01b81523060048201526024810185905290516001600160a01b03909216926340c10f199260448084019382900301818387803b1580156105fa57600080fd5b505af115801561060e573d6000803e3d6000fd5b505050506106258184610b5990919063ffffffff16565b9250600191505b600b54604080518381526020810192909252805186927fce8f0c0868b3497f8bb005e8ee9d6f967e32053f5290e2c1c3390e106b92cde492908290030190a2505b610678836001610b59565b9250610450565b600584905580156107015760408051808201909152438152602081018381526003805460018101825560009190915291517fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b600290930292830155517fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85c909101555b5050505b50565b60065481565b60055481565b60075481565b6001602052600090815260409020805460028201546003830154600684015460078501546009860154600a90960154949593949293919290919087565b7f000000000000000000000000000000000000000000000000000000000000000081565b603481565b6000610798826107934262093a80610a95565b6107bd565b92915050565b600a5481565b6004602052600090815260409020805460019091015482565b6000806107c8610d2a565b90506107d381610409565b60006107e24262093a80610a95565b905060006107ee610ade565b6001600160a01b038716600090815260016020526040902060098101549192509083871180159061081e57508087115b801561082957508287115b61086b576040805162461bcd60e51b815260206004820152600e60248201526d125b9d985b1a59081d185c99d95d60921b604482015290519081900360640190fd5b82811015610909576000835b8881116108fc57600081815260046020526040812060018101549091906108a090600290610d83565b905060006108b5876001018460010154610d83565b90506108dc6108d58361056f848760000154610cd190919063ffffffff16565b8690610b59565b94505050506108f5600182610b5990919063ffffffff16565b9050610877565b509550610a8e9350505050565b6002820154600061091b836001610b59565b90505b88811161099c576000818152600460205260408120600181015490919061094790600290610d83565b9050600061095c876001018460010154610d83565b905061097c6108d58361056f848760000154610cd190919063ffffffff16565b9450505050610995600182610b5990919063ffffffff16565b905061091e565b506109c87f00000000000000000000000000000000000000000000000000000000000000006034610b59565b8810610a8757600a8301545b6109df856001610ec8565b8111610a855760006004816109f5846034610ec8565b815260200190815260200160002090506000610a1660028360010154610d83565b90506000610a2b876001018460010154610d83565b90506000610a4a8361056f848760000154610cd190919063ffffffff16565b9050808611610a5a576000610a64565b610a648682610ec8565b955050505050610a7e600182610b5990919063ffffffff16565b90506109d4565b505b9550505050505b5092915050565b6000610ad783836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250610f0a565b9392505050565b600080610aee4262093a80610a95565b9050610b1b7f00000000000000000000000000000000000000000000000000000000000000006034610b59565b811015610b48577f0000000000000000000000000000000000000000000000000000000000000000610b53565b610b53816034610ec8565b91505090565b600082820183811015610ad7576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b60006107988243610d83565b600854610bd157600654600b55610705565b60006008548210610bef57600854610bea908390610ec8565b610bfc565b600854610bfc9083610ec8565b90506000610c1d60085461056f6305f5e10085610cd190919063ffffffff16565b90506000610c3d620f424061056f60095485610cd190919063ffffffff16565b90506000600854851015610c7057610c696305f5e10061056f610c608286610b59565b600b5490610cd1565b9050610c9a565b816305f5e10011610c82576000610c97565b610c976305f5e10061056f610c608286610ec8565b90505b600654811015610caf57600654600b55610cca565b600754811115610cc457600754600b55610cca565b600b8190555b5050505050565b600082610ce057506000610798565b82820282848281610ced57fe5b0414610ad75760405162461bcd60e51b81526004018080602001828103825260218152602001806110076021913960400191505060405180910390fd5b600080610d3a4262093a80610a95565b90506000610d5360055483610ec890919063ffffffff16565b90506005811115610d7a57610d75610d6c826002610a95565b60055490610b59565b610d7c565b815b9250505090565b8154600090610d9457506000610798565b82548390610da3906001610ec8565b81548110610dad57fe5b9060005260206000209060020201600001548210610df75782548390610dd4906001610ec8565b81548110610dde57fe5b9060005260206000209060020201600101549050610798565b82600081548110610e0457fe5b906000526020600020906002020160000154821015610e2557506000610798565b82546000908190610e37906001610ec8565b90505b81811115610ea0576000610e5e600261056f6001610e588688610b59565b90610b59565b905084868281548110610e6d57fe5b90600052602060002090600202016000015411610e8c57809250610e9a565b610e97816001610ec8565b91505b50610e3a565b848281548110610eac57fe5b9060005260206000209060020201600101549250505092915050565b6000610ad783836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610fac565b60008183610f965760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610f5b578181015183820152602001610f43565b50505050905090810190601f168015610f885780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b506000838581610fa257fe5b0495945050505050565b60008184841115610ffe5760405162461bcd60e51b8152602060048201818152835160248401528351909283926044909101919085019080838360008315610f5b578181015183820152602001610f43565b50505090039056fe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77a2646970667358221220da97111757fd833eeba4a6d7bd5d31962c48e6b8b7fb774ce1f1020740edc80164736f6c634300060c0033";
